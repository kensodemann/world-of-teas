CREATE TABLE IF NOT EXISTS users (
  ID INTEGER NOT NULL,
  FIRST_NAME TEXT NOT NULL,
  LAST_NAME TEXT NOT NULL,
  EMAIL TEXT NOT NULL,
  CONSTRAINT users_pk PRIMARY KEY (ID)
);

CREATE SEQUENCE IF NOT EXISTS user_id_sequence START WITH 1;

CREATE TABLE IF NOT EXISTS user_credentials (
  USER_RID INTEGER NOT NULL REFERENCES users (ID),
  PASSWORD TEXT NOT NULL,
  SALT TEXT NOT NULL,
  CONSTRAINT user_credentials_pk PRIMARY KEY (USER_RID)
);

CREATE TABLE IF NOT EXISTS password_reset_token (
  USER_RID INTEGER NOT NULL REFERENCES users (ID),
  TOKEN TEXT NOT NULL,
  TIMESTAMP INTEGER NOT NULL,
  CONSTRAINT password_reset_token_pk PRIMARY KEY (USER_RID)
);

DROP TRIGGER IF EXISTS bir_users ON users;
DROP FUNCTION IF EXISTS bir_users();

CREATE FUNCTION bir_users() RETURNS trigger as $bir_users$
BEGIN
  IF NEW.id IS NULL THEN
    NEW.id := nextval('user_id_sequence');
  END IF;
  RETURN NEW;
END;
$bir_users$ LANGUAGE plpgsql;

CREATE TRIGGER bir_users BEFORE INSERT ON users
    FOR EACH ROW EXECUTE PROCEDURE bir_users();
